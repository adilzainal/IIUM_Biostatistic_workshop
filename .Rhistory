library(catspec)
library(BaylorEdPsych)
library(mvnmle)
library(dplyr)
library(MissMech)
library(nlme)
library(missForest)
library(randomForest)
my_data <- ToothGrowth
View(my_data)
source('~/Desktop/Medical Statistic/IIUM Biostatistic Workshop/IIUM_Biostatistic_workshop/MAZA_MLR.R')
# We visualize our data first
ggboxplot(data, x = "exercise", y = c("sbp", "dbp"),
merge = TRUE, palette = "jco")
library(ggplot2)
library(GGally)
# We visualize our data first
ggboxplot(data, x = "exercise", y = c("sbp", "dbp"),
merge = TRUE, palette = "jco")
library(ggpubr)
# We visualize our data first
ggboxplot(data, x = "exercise", y = c("sbp", "dbp"),
merge = TRUE, palette = "jco")
# We visualize our data first
data$exercise <- factor(data$exercise,levels = c("Low", "Moderate", "High"))
ggboxplot(data, x = "exercise", y = c("sbp", "dbp"),
merge = TRUE, palette = "jco")
# We describe our data
data %>%
group_by(exercise) %>%
get_summary_stats(sbp, dbp, type = "mean_sd")
# Compute manova , we use pillai trace as the multivariate statistic as it is recommended. There are 3 other test.
model <- lm(cbind(sbp, dbp) ~ exercise, data)
Manova(model, test.statistic = "Pillai")
summary.aov(model)
# We then now run multiple pairwise comparisons
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise) %>%
select(-estimate, -conf.low, -conf.high) # Remove details
pwc
# We then now run multiple pairwise comparisons
pwc <- data %>%
gather(key = "exercise", value = "value", sbp, dbp) %>%
group_by(exercise) %>%
games_howell_test(value ~ exercise) %>%
select(-estimate, -conf.low, -conf.high) # Remove details
pwc
# We then now run multiple pairwise comparisons for each outcome
grouped.data <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables)
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise) %>%
select(-estimate, -conf.low, -conf.high) # Remove details
pwc
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise)
pwc
# Assumptions for MANOVA are
# 1. Adequate sample size , the rule of thumb is the n in each cell > the number of outcome variables
data %>%
group_by(exercise) %>%
summarise(N=n())
library(dplyr)
# Assumptions for MANOVA are
# 1. Adequate sample size , the rule of thumb is the n in each cell > the number of outcome variables
data %>%
group_by(exercise) %>%
summarise(N=n())
# 3. Absence of univariate or multivariate outliers
data %>%  # univariate outliers
group_by(exercise) %>%
identify_outliers(sbp)
data %>% # univariate outliers
group_by(exercise) %>%
identify_outliers(dbp)
data %>% # multivariate outliers using mahalanobis distance
group_by(exercise) %>%
mahalanobis_distance(-id) %>%
filter(is.outlier == TRUE) %>%
as.data.frame()
# 4. Multivariate normality using mshapiro_Test() from rstatix package
data %>% group_by(exercise) %>% shapiro_test(sbp, dbp) %>% arrange(variable) # univariate
data %>% select(sbp, dbp) %>% mshapiro_test() # multivariate
# 5. Absence of multicollinearity between the dependent outcomes. The correlation should not be above 0.9
data %>% cor_test(sbp, dbp)
# 6. Linearity between all outcome variables for each group
results <- data %>%
select(sbp, dbp, exercise) %>%
group_by(exercise) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
results
results$plots
# 7. Homogeneity of variances using Levene's test
data %>%
gather(key = "variable", value = "value", sbp, dbp) %>%
group_by(variable) %>%
levene_test(value ~ exercise)
# 8. Homogeneity of variance-covariance matrices using Box's M Test,
box_m(data[, c("sbp", "dbp")], data$exercise)
# Just now we have see that .......
# It is basically running ancova on 2 linear combination of the outcome instead of run 2 seperate ancova.
outcome = cbind(sbp, dbp)
m.mancova = manova(outcome ~ exercise * hba1c, data = data)
summary(m.mancova, test = "Wilks", type = "III")
summary.aov(model)
summary(m.mancova)
mancova(data = data,
deps = vars(sbp, dbp),
factors = exercise,
cov = hba1c)
# Package required
install.packages("jmv")
library(jmv)
mancova(data = data,
deps = vars(sbp, dbp),
factors = exercise,
cov = hba1c)
outcome = cbind(sbp, dbp)
m.mancova = manova(outcome ~ exercise * hba1c, data = data)
summary(m.mancova, test = "Wilks", type = "III")
grouped.data <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables)
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise + hba1c)
pwc
grouped.data <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables)
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise)
pwc
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise + hba1c)
# Just now we have see that .......
# It is basically running ancova on 2 linear combination of the outcome instead of run 2 seperate ancova.
mancova(data = data,
deps = vars(sbp, dbp),
factors = exercise,
cov = hba1c)
res.aov <- data %>%
anova_test(sbp ~ hba1c + exercise)
get_anova_table(res.aov)
pwc <- data %>%
emmeans_test(
sbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
grouped.data <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables)
pwc <- data %>%
emmeans_test(
value ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
# Just now we have see that .......
# It is basically running ancova on 2 linear combination of the outcome instead of run 2 seperate ancova.
mancova(data = data,
deps = vars(sbp, dbp),
factors = exercise,
cov = hba1c)
res.aov <- data %>%
anova_test(sbp ~ hba1c + exercise)
get_anova_table(res.aov)
res.aov <- data %>%
anova_test(dbp ~ hba1c + exercise)
get_anova_table(res.aov)
pwc <- data %>%
emmeans_test(
sbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
res.aov <- data %>%
anova_test(dbp ~ hba1c + exercise)
get_anova_table(res.aov)
pwc <- data %>%
emmeans_test(
dbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data1 <- data %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp1, sbp2) %>%
convert_as_factor(id, time)
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data1 <- data %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp2, sbp3) %>%
convert_as_factor(id, time)
# Get the summary statistics
data1 %>%
group_by(time) %>%
get_summary_stats(sbpmeasure, type = "mean_sd")
# Visualise the differences
bxp <- ggboxplot(data1, x = "time", y = "sbpmeasure", add = "point")
bxp
# The assumption for RM-ANOVA are
# 1. No significant outliers using identify_outliers
data1 %>%
group_by(time) %>%
identify_outliers(sbpmeasure)
# 2. Normality of the outcome using shapiro-wilk normality test or visual qq plot
data1 %>% # statistically
group_by(time) %>%
shapiro_test(sbpmeasure)
ggqqplot(data1, "sbpscore", facet.by = "time") # visually
ggqqplot(data1, "sbpmeasure", facet.by = "time") # visually
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = time)
get_anova_table(res.aov)
# We can then run posthoc test
# pairwise comparisons
pwc <- data1 %>%
pairwise_t_test(sbpmeasure ~ time, paired = TRUE,p.adjust.method = "bonferroni")
pwc
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = exercise,time)
get_anova_table(res.aov)
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = c(exercise,time))
get_anova_table(res.aov)
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = c(exercise, time))
get_anova_table(res.aov)
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = time)
get_anova_table(res.aov)
# We can then run posthoc test
# pairwise comparisons
pwc <- data1 %>%
pairwise_t_test(sbpmeasure ~ time, paired = TRUE,p.adjust.method = "bonferroni")
pwc
# Visualization: box plots with p-values
pwc <- pwc %>% add_xy_position(x = "time")
bxp +
stat_pvalue_manual(pwc) +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
# summary statistics
data1 %>%
group_by(exercise, time) %>%
get_summary_stats(sbpmeasure, type = "mean_sd")
# visualize
bxp <- ggboxplot(
selfesteem2, x = "time", y = "sbpmeasure",
color = "exercise", palette = "jco"
)
bxp
# visualize
bxp <- ggboxplot(
data1, x = "time", y = "sbpmeasure",
color = "exercise", palette = "jco"
)
bxp
#assumption
data1 %>%
group_by(exercise, time) %>%
identify_outliers(sbpmeasure)
data1 %>%
group_by(exercise, time) %>%
shapiro_test(sbpmeasure)
ggqqplot(data1, "sbpmeasure", ggtheme = theme_bw()) +
facet_grid(time ~ exercise, labeller = "label_both")
# 2 way RM-ANOVA
res.aov <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time)
)
# 2 way RM-ANOVA
res.aov2 <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time)
)
# 2 way RM-ANOVA
res.aov2 <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time))
get_anova_table(res.aov2)
res.aov <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time)
)
get_anova_table(res.aov)
set.seed(123)
data1 %>% sample_n_by(exercise, time, size = 1)
# 2 way RM-ANOVA
res.aov2 <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time))
get_anova_table(res.aov2)
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = time)
get_anova_table(res.aov)
# 2 way RM-ANOVA
res.aov2 <- rstatix::anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time))
get_anova_table(res.aov2)
# 2 way RM-ANOVA
rstatix::anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time))
lm(sbpmeasure~id+time:exercise,data=data1)
# Package required
install.packages("ez")
library(ez)
bushModel<-ezANOVA(data = data1, dv = .(sbpmeasure), wid = .(id), within = .(exercise), detailed = TRUE, type = 3)
bushModel<-ezANOVA(data = data1, dv = .(sbpmeasure), wid = .(id), within = .(time), detailed = TRUE, type = 3)
bushModel
bushModel<-ezANOVA(data = data1, dv = .(sbpmeasure),
wid = .(id),
within = .(time),
between = .(exercise),
detailed = FALSE, type = 2)
bushModel
# 2 way RM-ANOVA
res.aov2 <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time))
get_anova_table(res.aov2)
King.aov <- aov(sbpmeasure ~ (exercise*time) + Error(id/(time)), data = data1)
King.aov
print(summary(King.aov))
# 2 way RM-ANOVA
twrm.aov <- aov(sbpmeasure ~ (exercise*time) + Error(id/(time)), data = data1)
print(summary(twrm.aov))
interaction.plot(data1$time, factor(data1$exercise),
legend = "F",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
merge = TRUE, bg = 'gray90')
interaction.plot(data1$time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90'))
interaction.plot(data1$time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90')
)
interaction.plot(Time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90')
)
interaction.plot(data1$time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP", xlab = "Time"
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90')
)
interaction.plot(data1$time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP", xlab = "Time",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90')
)
print(summary(twrm.aov))
# Post hoc
# Effect of exercise at each time point
one.way <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, wid = id, within = exercise) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
# 2 way RM-ANOVA
twrm.aov <- aov(sbpmeasure ~ (exercise*time) + Error(id/(time)), data = data1)
print(summary(twrm.aov))
library(tidyverse)
resultsaa <- ezANOVA(data = data1,
dv = .(sbpmeasure), wid = .(id),
within = .(time, exercise),
type = 3, detailed = TRUE)
resultsaa <- ezANOVA(data = data1,
dv = .(sbpmeasure), wid = .(id),
within = .(time, exercise),
type = 3, detailed = TRUE)
options(digits = 10)
resultsaa <- ezANOVA(data = data1,
dv = .(sbpmeasure), wid = .(id),
within = .(time, exercise),
type = 3, detailed = TRUE)
describe(data1$exercise)
attach(data1)
resultsaa <- ezANOVA(data = data1,
dv = .(sbpmeasure), wid = .(id),
within = .(time, exercise),
type = 3, detailed = TRUE)
res.aov <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time)
)
get_anova_table(res.aov)
data1 %>% sample_n_by(exercise, size = 1)
data1 %>% sample_n_by(exercise, time, size = 1)
res.aov <- anova_test(
data = data1, dv = sbpmeasure, wid = id,
within = c(exercise, time)
)
get_anova_table(res.aov)
anova_test(dv = sbpmeasure, between = c(exercise, time), data = data1)
interaction.plot(data1$time, factor(data1$exercise),
data1$sbpmeasure, fun = mean, type="b", pch = c(2,4,6),
legend = "F",
col = c(3,4,6), ylab = "SBP", xlab = "Time",
legend(4, 300, c("Low", "Moderate", "High"), col = c(4,6,3),
text.col = "green4", lty = c(2, 1, 3), pch = c(4, 6, 2),
merge = TRUE, bg = 'gray90')
)
# Effect of exercise at each time point
one.way <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, wid = id, within = exercise) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
# Effect of exercise at each time point
one.way <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, between = exercise) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
pairwise_t_test(
sbpmeasure ~ exercise, paired = TRUE,
p.adjust.method = "bonferroni"
)
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, wid = id, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, wid = id, within = time) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way <- data1 %>%
group_by(time) %>%
anova_test(dv = sbpmeasure, between = exercise) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
anova_test(sbpmeasure ~ exercise) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
pwc
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
pairwise_t_test(
sbpmeasure ~ exercise, paired = TRUE,
p.adjust.method = "bonferroni"
)
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
anova(sbpmeasure ~ exercise,
p.adjust.method = "bonferroni"
)
# Pairwise comparisons between exercise groups
pwc <- data1 %>%
group_by(time) %>%
tukey_hsd(sbpmeasure ~ exercise,
p.adjust.method = "bonferroni"
)
pwc
# 2 way RM-ANOVA
twrmanova <- anova_test(dv = sbpmeasure, between = c(exercise, time), data = data1)
twrmanova
apa.ezANOVA.table(twrmanova,
table.number = 7,
filename="Table7_APA.doc")
