install.packages(c("Amelia", "BaylorEdPsych", "calibrate", "car", "catspec", "dplyr", "epitools", "FSA", "ggplot2", "ggpubr", "Hmisc", "HSAUR", "magrittr", "mice", "missForest", "missMDA", "MissMech", "mvnmle", "naniar", "plyr", "psy", "psych", "Publish", "randomForest", "Rcpp", "readxl", "reshape2", "Rmisc", "rms", "tables"))
#required package
library(foreign)
library(readxl)
library(psych)
library(ggplot2)
library(reshape2)
library(lattice)
library(plyr)
library(Rmisc)
library(MASS)
library(HSAUR)
library(tools)
library(Amelia)
library(Rcpp)
library(Hmisc)
library(ggpubr)
library(magrittr)
library(calibrate)
library(tables)
library(dplyr)
library(naniar)
library(FSA)
library(stats)
library(Publish)
library(psy)
library(mice)
library(naniar)
library(epitools)
library(missMDA)
library(car)
library(rms)
library(catspec)
library(BaylorEdPsych)
library(mvnmle)
library(dplyr)
library(MissMech)
library(nlme)
library(missForest)
library(randomForest)
my_data <- ToothGrowth
View(my_data)
#required package
library(VIM)
library(foreign)
library(readxl)
library(psych)
library(ggplot2)
library(reshape2)
library(lattice)
library(plyr)
library(Rmisc)
library(MASS)
library(HSAUR)
library(tools)
library(Amelia)
library(Rcpp)
library(Hmisc)
library(ggpubr)
library(magrittr)
library(calibrate)
library(tables)
library(dplyr)
library(naniar)
library(FSA)
library(stats)
library(Publish)
library(psy)
library(mice)
library(naniar)
library(epitools)
library(missMDA)
library(car)
library(rms)
library(catspec)
library(BaylorEdPsych)
library(mvnmle)
library(dplyr)
library(MissMech)
library(nlme)
library(missForest)
library(randomForest)
library(expss)
install.packages("EpiCurve")
library(epicurve)
install.packages("pastecs")
library(pastecs)
setwd("~/Desktop/Medical Statistic/IIUM Biostatistic Workshop/IIUM_Biostatistic_workshop")
library(tidyverse)
library(ggpubr)
library(rstatix)
library(broom)
library(car)
# We start with checking the assumption of ANCOVA
# 1. Linearity between covariate and the outcome variable. We can see there is a linear relationship between SBP and HbA1C.
ggscatter(data, x = "HBbA1c", y = "SBP",
color = "group", add = "reg.line")+
stat_regline_equation(
aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = exercise))
data <- read.spss(file="healthstatus.sav", to.data.frame=TRUE)
attach(data)
str(data)
data$bmi <- (data$wt / ((data$ht)/100)^2)
hist(age)
# We start with checking the assumption of ANCOVA
# 1. Linearity between covariate and the outcome variable. We can see there is a linear relationship between SBP and HbA1C.
ggscatter(data, x = "HBbA1c", y = "SBP",
color = "group", add = "reg.line")+
stat_regline_equation(
aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = exercise))
# 3. The outcome variable should be normally distributed by checking using Shapiro Wilk test of normality on the test residuals
# Fit the model, the covariate goes first
model <- lm(sbp ~ hba1c + exercise, data = data)
summary(model)
# Inspect the model diagnostic metrics
model.metrics <- augment(model) %>%
select(-.hat, -.sigma, -.fitted, -.se.fit) # Remove details
head(model.metrics, 3)
# Assess normality of residuals using shapiro wilk test
shapiro_test(model.metrics$.resid)
# 4. Homoscedasticity or homogeneity of residuals variance for all groups.
model.metrics %>% levene_test(.resid ~ exercise)
# 5. No significant outliers in the groups.
model.metrics %>%
filter(abs(.std.resid) > 3) %>%
as.data.frame()
# Run ANCOVA
res.aov <- data %>%
anova_test(sbp ~ hba1c + exercise)
get_anova_table(res.aov)
# Run post hoc test pairwise comparisons
library(emmeans)
pwc <- data %>%
emmeans_test(
sbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
# Display the adjusted means of each group
# Also called as the estimated marginal means (emmeans)
get_emmeans(pwc)
# 3. The outcome variable should be normally distributed by checking using Shapiro Wilk test of normality on the test residuals
# Fit the model, the covariate goes first
model <- lm(sbp ~ hba1c + exercise, data = data)
summary(model)
# Run ANCOVA
res.aov <- data %>%
anova_test(sbp ~ hba1c + exercise)
get_anova_table(res.aov)
pwc <- data %>%
emmeans_test(
sbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
pwc <- data %>%
emmeans_test(
sbp ~ exercise, covariate = hba1c,
p.adjust.method = "bonferroni")
pwc
ggboxplot(data, x = "exercise", y = c("sbp", "dbp"),
merge = TRUE, palette = "jco")
# We describe our data
data %>%
group_by(exercise) %>%
get_summary_stats(sbp, dbp, type = "mean_sd")
# Assumptions for MANOVA are
# 1. Adequate sample size , the rule of thumb is the n in each cell > the number of outcome variables
data %>%
group_by(exercise) %>%
summarise(N=n())
# 2. independence of variables, the selection of the sample should be completely random
# 3. Absence of univariate or multivariate outliers
data %>%  # univariate outliers
group_by(exercise) %>%
identify_outliers(sbp)
data %>% # univariate outliers
group_by(exercise) %>%
identify_outliers(dbp)
data %>% # multivariate outliers using mahalanobis distance
group_by(exercise) %>%
mahalanobis_distance(-id) %>%
filter(is.outlier == TRUE) %>%
as.data.frame()
# 4. Multivariate normality using mshapiro_Test() from rstatix package
data %>% group_by(exercise) %>% shapiro_test(sbp, dbp) %>% arrange(variable) # univariate
data %>% select(sbp, dbp) %>% mshapiro_test() # multivariate
# 5. Absence of multicollinearity between the dependent outcomes. The correlation should not be above 0.9
data %>% cor_test(sbp, dbp)
# 6. Linearity between all outcome variables for each group
library(GGally)
results <- data %>%
select(sbp, dbp, exercise) %>%
group_by(exercise) %>%
doo(~ggpairs(.) + theme_bw(), result = "plots")
results
results$plots
# Compute manova , we use pillai as the multivariate statistic as it is recommended. There are 3 other test.
model <- lm(cbind(sbp, dbp) ~ exercise, data)
Manova(model, test.statistic = "Pillai")
summary.aov(model)
# We then now run multiple pairwise comparisons
pwc <- data %>%
gather(key = "variables", value = "value", sbp, dbp) %>%
group_by(variables) %>%
games_howell_test(value ~ exercise) %>%
select(-estimate, -conf.low, -conf.high) # Remove details
pwc
m.mancova = manova(outcome ~ exercise * hba1c, data = data)
summary(m.mancova, test = "Wilks", type = "III")
# Just now we have see that .......
# It is basically running ancova on 2 linear combination of the outcome instead of run 2 seperate ancova.
outcome = cbind(sbp, dbp)
m.mancova = manova(outcome ~ exercise * hba1c, data = data)
summary(m.mancova, test = "Wilks", type = "III")
# Let us first create a random variable for SBP at time 2 and time 3
data$sbp1 <- rnorm(153, mean=121, sd=10)
data$sbp2 <- rnorm(153, mean=118, sd=12.1)
View(data)
View(data)
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data1 <- data1 %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp1, sbp2) %>%
convert_as_factor(id, time)
head(data1, 3)
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data <- data %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp1, sbp2) %>%
convert_as_factor(id, time)
head(data, 3)
head(data, 10)
head(data, 30)
head(data, 150)
View(data)
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data1 <- data %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp1, sbp2) %>%
convert_as_factor(id, time)
# We change the data to long format first
# Gather columns t1, t2 and t3 into long format
# Convert id and time into factor variables
data1 <- data %>%
gather(key = "time", value = "sbpmeasure", sbp, sbp1, sbp2) %>%
convert_as_factor(id, time)
data1 <- data
# Get the summary statistics
data1 %>%
group_by(time) %>%
get_summary_stats(sbpmeasure, type = "mean_sd")
# Visualise the differences
bxp <- ggboxplot(data1, x = "time", y = "sbpmeasure", add = "point")
bxp
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpscore, wid = id, within = time)
# The assumption for RM-ANOVA are
# 1. No significant outliers using identify_outliers
data1 %>%
group_by(time) %>%
identify_outliers(sbpmeasure)
# 2. Normality of the outcome using shapiro-wilk normality test or visual qq plot
data1 %>% # statistically
group_by(time) %>%
shapiro_test(sbpmeasure)
ggqqplot(data1, "sbpscore", facet.by = "time") # visually
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpscore, wid = id, within = time)
View(data)
# 3. Assumption of spherecity. Sphericity is the variance of the difference between group should be equal using Mauchly test
res.aov <- anova_test(data = data1, dv = sbpmeasure, wid = id, within = time)
get_anova_table(res.aov)
# We will get the Greenhouse-Geisser spherecity correction automatically applied to factors violating the spherecity assumption
# The ges is the generalized effect size (amount of variability due to within subject factor)
# We can then run posthoc test
# pairwise comparisons
pwc <- data1 %>%
pairwise_t_test(sbpmeasure ~ time, paired = TRUE,p.adjust.method = "bonferroni")
pwc
